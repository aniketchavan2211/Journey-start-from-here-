#!/usr/bin/env python3

from string import ascii_lowercase, ascii_uppercase, digits, punctuation
from secrets import choice
import os
import hashlib

## alphabets, digits, meta characters(special characters)
data = ascii_lowercase + ascii_uppercase + digits + punctuation
length = 16

def generate_salt():
    salt = os.urandom(16)  # Generate a random 16-byte salt
    return salt

def generate_random_password():
    password = ''.join(choice(data) for _ in range(length))
    return password

def hashed_passwd(password, salt):
    context = password.encode('utf-8')
    salted_password = salt + context
    sha512 = hashlib.sha512()
    sha512.update(salted_password)
    password = sha512.hexdigest()
    return password

def verify(salted_password, input_password, salt):
    input_password = hashed_passwd(input_password, salt)
    if salted_password == input_password: 
        print("Password is Correct")
    else:
        print("Password is INCORRECT")

def main():
    # password = generate_random_password()
    input_password = input("Enter MASTER key:  ")
    password = "admin"
    salt = b"admin"  # generate_salt()
    salted_password = hashed_passwd(password, salt)
    print(f"Salted Password: {salted_password}")
    verify(salted_password, input_password, salt)

if __name__ == '__main__':
    main()
